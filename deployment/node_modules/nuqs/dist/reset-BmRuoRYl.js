import { debounceController, globalThrottleQueue } from "./debounce-CmqzOOem.js";
import { debug } from "./context-BWo_DoaC.js";

//#region src/lib/queues/reset.ts
let mutex = 0;
function setQueueResetMutex(value = 1) {
	mutex = value;
}
function spinQueueResetMutex() {
	mutex = Math.max(0, mutex - 1);
	if (mutex > 0) return;
	resetQueues();
}
function resetQueues() {
	debug("[nuqs] Aborting queues");
	debounceController.abortAll();
	const abortedKeys = globalThrottleQueue.abort();
	abortedKeys.forEach((key) => debounceController.queuedQuerySync.emit(key));
}

//#endregion
export { resetQueues, setQueueResetMutex, spinQueueResetMutex };
//# sourceMappingURL=reset-BmRuoRYl.js.map