'use strict';

var react$1 = require('motion/react');
var react = require('react');
var reactDom = require('react-dom');
var reactSyntaxHighlighter = require('react-syntax-highlighter');
var prism = require('react-syntax-highlighter/dist/esm/styles/prism');
var jsxRuntime = require('react/jsx-runtime');
var clsx = require('clsx');
var tailwindMerge = require('tailwind-merge');

// package.json
var version = "1.1.3";
var Check = (props) => {
  return /* @__PURE__ */ jsxRuntime.jsx(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      width: "24",
      height: "24",
      viewBox: "0 0 24 24",
      fill: "none",
      stroke: "currentColor",
      strokeWidth: "2",
      strokeLinecap: "round",
      strokeLinejoin: "round",
      ...props,
      children: /* @__PURE__ */ jsxRuntime.jsx("path", { d: "M20 6 9 17l-5-5" })
    }
  );
};
var AlertTriangle = (props) => {
  return /* @__PURE__ */ jsxRuntime.jsxs(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      width: "24",
      height: "24",
      viewBox: "0 0 24 24",
      fill: "none",
      stroke: "currentColor",
      strokeWidth: "2",
      strokeLinecap: "round",
      strokeLinejoin: "round",
      ...props,
      children: [
        /* @__PURE__ */ jsxRuntime.jsx("path", { d: "m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3" }),
        /* @__PURE__ */ jsxRuntime.jsx("path", { d: "M12 9v4" }),
        /* @__PURE__ */ jsxRuntime.jsx("path", { d: "M12 17h.01" })
      ]
    }
  );
};
var X = (props) => {
  return /* @__PURE__ */ jsxRuntime.jsxs(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      width: "24",
      height: "24",
      viewBox: "0 0 24 24",
      fill: "none",
      stroke: "currentColor",
      strokeWidth: "2",
      strokeLinecap: "round",
      strokeLinejoin: "round",
      ...props,
      children: [
        /* @__PURE__ */ jsxRuntime.jsx("path", { d: "M18 6 6 18" }),
        /* @__PURE__ */ jsxRuntime.jsx("path", { d: "m6 6 12 12" })
      ]
    }
  );
};
var Copy = (props) => {
  return /* @__PURE__ */ jsxRuntime.jsxs(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      width: "24",
      height: "24",
      viewBox: "0 0 24 24",
      fill: "none",
      stroke: "currentColor",
      strokeWidth: "2",
      strokeLinecap: "round",
      strokeLinejoin: "round",
      ...props,
      children: [
        /* @__PURE__ */ jsxRuntime.jsx("rect", { width: "14", height: "14", x: "8", y: "8", rx: "2", ry: "2" }),
        /* @__PURE__ */ jsxRuntime.jsx("path", { d: "M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2" })
      ]
    }
  );
};
function cn(...inputs) {
  return tailwindMerge.twMerge(clsx.clsx(inputs));
}
var normalizeIndentation = (code) => {
  const lines = code.split("\n");
  const nonEmptyLines = lines.filter((line) => line.trim().length > 0);
  if (nonEmptyLines.length === 0) return code;
  const minIndent = Math.min(
    ...nonEmptyLines.map((line) => {
      const match = line.match(/^(\s*)/);
      return match ? match[1].length : 0;
    })
  );
  const normalizedLines = lines.map((line) => {
    if (line.trim().length === 0) return line;
    return line.slice(minIndent);
  });
  return normalizedLines.join("\n").trim();
};
var copy = async (content) => {
  try {
    const normalizedContent = normalizeIndentation(content);
    if (navigator.clipboard && navigator.clipboard.writeText) {
      await navigator.clipboard.writeText(normalizedContent);
    } else {
      const textArea = document.createElement("textarea");
      textArea.value = normalizedContent;
      textArea.style.position = "fixed";
      textArea.style.left = "-999999px";
      textArea.style.top = "-999999px";
      document.body.appendChild(textArea);
      textArea.focus();
      textArea.select();
      document.execCommand("copy");
      document.body.removeChild(textArea);
    }
  } catch (err) {
    console.error("Failed to copy code:", err);
  }
};

// packages/core/actions.ts
var checkEnvironmentVariables = async (variables) => {
  if (process.env.NODE_ENV === "production") {
    return {
      envs: [],
      allValid: true
    };
  }
  const envs = variables.map((env) => ({
    name: env.name,
    label: env.label,
    isValid: Boolean(process.env[env.name])
  }));
  const allValid = envs.every((env) => env.isValid);
  return {
    envs,
    allValid
  };
};

// packages/core/styles.ts
var CSS_CONTENT = `*,:after,:before{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }/*! tailwindcss v3.4.17 | MIT License | https://tailwindcss.com*/*,:after,:before{box-sizing:border-box;border:0 solid #e5e7eb}:after,:before{--tw-content:""}:host,html{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;-o-tab-size:4;tab-size:4;font-family:ui-sans-serif,system-ui,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;font-feature-settings:normal;font-variation-settings:normal;-webkit-tap-highlight-color:transparent}body{margin:0;line-height:inherit}hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-feature-settings:normal;font-variation-settings:normal;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}button,input,optgroup,select,textarea{font-family:inherit;font-feature-settings:inherit;font-variation-settings:inherit;font-size:100%;font-weight:inherit;line-height:inherit;letter-spacing:inherit;color:inherit;margin:0;padding:0}button,select{text-transform:none}button,input:where([type=button]),input:where([type=reset]),input:where([type=submit]){-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}fieldset{margin:0}fieldset,legend{padding:0}menu,ol,ul{list-style:none;margin:0;padding:0}dialog{padding:0}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{opacity:1;color:#9ca3af}input::placeholder,textarea::placeholder{opacity:1;color:#9ca3af}[role=button],button{cursor:pointer}:disabled{cursor:default}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}[hidden]:where(:not([hidden=until-found])){display:none}.v0-pointer-events-none{pointer-events:none}.v0-pointer-events-auto{pointer-events:auto}.v0-fixed{position:fixed}.v0-absolute{position:absolute}.v0-relative{position:relative}.v0-inset-0{inset:0}.v0-bottom-6{bottom:1.5rem}.v0-right-2{right:.5rem}.v0-top-2{top:.5rem}.v0-z-10{z-index:10}.v0-z-\\[9999\\]{z-index:9999}.v0-mt-4{margin-top:1rem}.v0-block{display:block}.v0-flex{display:flex}.v0-size-10{width:2.5rem;height:2.5rem}.v0-size-4{width:1rem;height:1rem}.v0-size-8{width:2rem;height:2rem}.v0-h-4{height:1rem}.v0-h-9{height:2.25rem}.v0-min-h-0{min-height:0}.v0-w-4{width:1rem}.v0-w-\\[500px\\]{width:500px}.v0-min-w-0{min-width:0}.v0-max-w-\\[90\\%\\]{max-width:90%}.v0-flex-1{flex:1 1 0%}.v0-flex-shrink-0,.v0-shrink-0{flex-shrink:0}.v0--rotate-90{--tw-rotate:-90deg}.v0--rotate-90,.v0-transform{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.v0-flex-col{flex-direction:column}.v0-items-end{align-items:flex-end}.v0-items-center{align-items:center}.v0-justify-center{justify-content:center}.v0-justify-between{justify-content:space-between}.v0-gap-2{gap:.5rem}.v0-gap-3{gap:.75rem}.v0-gap-4{gap:1rem}.v0-space-y-3>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-top:calc(.75rem*(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.75rem*var(--tw-space-y-reverse))}.v0-overflow-hidden{overflow:hidden}.v0-overflow-y-auto{overflow-y:auto}.v0-truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.v0-text-balance{text-wrap:balance}.v0-rounded{border-radius:.25rem}.v0-rounded-lg{border-radius:.5rem}.v0-rounded-sm{border-radius:.125rem}.v0-rounded-b-lg{border-bottom-right-radius:.5rem;border-bottom-left-radius:.5rem}.v0-rounded-t-lg{border-top-left-radius:.5rem;border-top-right-radius:.5rem}.v0-border{border-width:1px}.v0-border-b{border-bottom-width:1px}.v0-border-dashed{border-style:dashed}.v0-border-amber-200{--tw-border-opacity:1;border-color:rgb(253 230 138/var(--tw-border-opacity,1))}.v0-border-neutral-200{--tw-border-opacity:1;border-color:rgb(229 229 229/var(--tw-border-opacity,1))}.v0-bg-amber-100{--tw-bg-opacity:1;background-color:rgb(254 243 199/var(--tw-bg-opacity,1))}.v0-bg-amber-50{--tw-bg-opacity:1;background-color:rgb(255 251 235/var(--tw-bg-opacity,1))}.v0-bg-black\\/30{background-color:rgba(0,0,0,.3)}.v0-bg-green-100{--tw-bg-opacity:1;background-color:rgb(220 252 231/var(--tw-bg-opacity,1))}.v0-bg-neutral-100{--tw-bg-opacity:1;background-color:rgb(245 245 245/var(--tw-bg-opacity,1))}.v0-bg-neutral-50{--tw-bg-opacity:1;background-color:rgb(250 250 250/var(--tw-bg-opacity,1))}.v0-bg-neutral-800{--tw-bg-opacity:1;background-color:rgb(38 38 38/var(--tw-bg-opacity,1))}.v0-bg-white{--tw-bg-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity,1))}.v0-p-1{padding:.25rem}.v0-p-2{padding:.5rem}.v0-p-3{padding:.75rem}.v0-p-4{padding:1rem}.v0-px-3{padding-left:.75rem;padding-right:.75rem}.v0-px-4{padding-left:1rem;padding-right:1rem}.v0-py-1\\.5{padding-top:.375rem;padding-bottom:.375rem}.v0-py-3{padding-top:.75rem;padding-bottom:.75rem}.v0-pb-6{padding-bottom:1.5rem}.v0-font-mono{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace}.v0-text-\\[10px\\]{font-size:10px}.v0-text-sm{font-size:.875rem;line-height:1.25rem}.v0-text-xs{font-size:.75rem;line-height:1rem}.v0-font-medium{font-weight:500}.v0-font-semibold{font-weight:600}.v0-tabular-nums{--tw-numeric-spacing:tabular-nums;font-variant-numeric:var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction)}.v0-leading-none{line-height:1}.v0-text-amber-500{--tw-text-opacity:1;color:rgb(245 158 11/var(--tw-text-opacity,1))}.v0-text-amber-600{--tw-text-opacity:1;color:rgb(217 119 6/var(--tw-text-opacity,1))}.v0-text-amber-800{--tw-text-opacity:1;color:rgb(146 64 14/var(--tw-text-opacity,1))}.v0-text-green-500{--tw-text-opacity:1;color:rgb(34 197 94/var(--tw-text-opacity,1))}.v0-text-green-600{--tw-text-opacity:1;color:rgb(22 163 74/var(--tw-text-opacity,1))}.v0-text-neutral-300{--tw-text-opacity:1;color:rgb(212 212 212/var(--tw-text-opacity,1))}.v0-text-neutral-500{--tw-text-opacity:1;color:rgb(115 115 115/var(--tw-text-opacity,1))}.v0-text-neutral-600{--tw-text-opacity:1;color:rgb(82 82 82/var(--tw-text-opacity,1))}.v0-text-neutral-700{--tw-text-opacity:1;color:rgb(64 64 64/var(--tw-text-opacity,1))}.v0-text-neutral-900{--tw-text-opacity:1;color:rgb(23 23 23/var(--tw-text-opacity,1))}.v0-shadow-sm{--tw-shadow:0 1px 2px 0 rgba(0,0,0,.05);--tw-shadow-colored:0 1px 2px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.v0-outline-none{outline:2px solid transparent;outline-offset:2px}.v0-transition-colors{transition-property:color,background-color,border-color,text-decoration-color,fill,stroke;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}`;
var isInjected = false;
function injectStyles() {
  if (isInjected || typeof document === "undefined") {
    return;
  }
  if (document.querySelector("#v0-setup-styles")) {
    isInjected = true;
    return;
  }
  const style = document.createElement("style");
  style.id = "v0-setup-styles";
  style.textContent = CSS_CONTENT;
  document.head.appendChild(style);
  isInjected = true;
}
var SetupToolbarInternal = ({ title, description, addon = {}, ...props }) => {
  const [open, setOpen] = react.useState(false);
  const [envs, setEnvs] = react.useState([]);
  const [loading, setLoading] = react.useState(true);
  const [allValid, setAllValid] = react.useState(false);
  const [copiedScript, setCopiedScript] = react.useState(null);
  const ref = react.useRef(null);
  react.useEffect(() => {
    const handleKeyDown = (event) => {
      if (event.key === "Escape") {
        setOpen(false);
      }
    };
    window.addEventListener("keydown", handleKeyDown);
    return () => window.removeEventListener("keydown", handleKeyDown);
  }, []);
  const handleCopyScript = async (content, scriptId) => {
    await copy(content);
    setCopiedScript(scriptId);
    setTimeout(() => setCopiedScript(null), 2e3);
  };
  const checkAllValid = react.useCallback((envs2) => {
    return envs2.every((env) => env.isValid);
  }, []);
  react.useEffect(() => {
    setLoading(true);
    if ("envs" in props) {
      checkEnvironmentVariables(props.envs).then((result) => {
        setEnvs(result.envs);
        setAllValid(checkAllValid(result.envs));
        setLoading(false);
      });
    } else {
      props.envCheckAction().then((result) => {
        setEnvs(result.envs);
        setAllValid(checkAllValid(result.envs));
        setLoading(false);
      });
    }
  }, []);
  if (loading || allValid) {
    return null;
  }
  const validCount = envs.filter((env) => env.isValid).length;
  return /* @__PURE__ */ jsxRuntime.jsxs(
    "div",
    {
      "aria-hidden": "true",
      className: cn(
        "v0-fixed v0-inset-0 v0-transition-colors v0-flex v0-items-end v0-justify-center v0-z-[9999] v0-p-4 v0-pointer-events-none"
      ),
      children: [
        /* @__PURE__ */ jsxRuntime.jsx(
          "div",
          {
            onClick: () => setOpen(false),
            className: cn(
              "v0-absolute v0-inset-0 v0-transition-colors",
              open ? "v0-pointer-events-auto v0-bg-black/30" : "v0-pointer-events-none"
            )
          }
        ),
        /* @__PURE__ */ jsxRuntime.jsx(react$1.AnimatePresence, { children: open ? /* @__PURE__ */ jsxRuntime.jsxs(
          react$1.motion.div,
          {
            layoutId: "wrapper",
            className: "v0-pointer-events-auto v0-max-w-[90%] v0-absolute v0-bottom-6 v0-w-[500px] v0-overflow-hidden v0-bg-neutral-100 v0-p-1 v0-outline-none v0-flex v0-flex-col",
            ref,
            style: {
              borderRadius: 12,
              boxShadow: "0 0 0 1px rgba(0, 0, 0, 0.08), 0px 2px 2px rgba(0, 0, 0, 0.04), 0px 0px 0px 1px rgba(0, 0, 0, 0.08)",
              height: "400px"
            },
            children: [
              /* @__PURE__ */ jsxRuntime.jsxs("div", { className: "v0-flex v0-items-center v0-justify-between v0-flex-shrink-0 v0-px-4 v0-py-3 v0-border-b v0-border-dashed v0-rounded-t-lg v0-bg-neutral-50 v0-border-neutral-200", children: [
                /* @__PURE__ */ jsxRuntime.jsxs("div", { className: "v0-flex v0-items-center v0-gap-2", children: [
                  /* @__PURE__ */ jsxRuntime.jsx(react$1.motion.div, { layoutId: "icon", children: /* @__PURE__ */ jsxRuntime.jsx(AlertTriangle, { className: "v0-size-4 v0-text-amber-600" }) }),
                  /* @__PURE__ */ jsxRuntime.jsx(react$1.motion.span, { layoutId: "title", className: "v0-text-sm v0-font-semibold v0-text-amber-800", children: title })
                ] }),
                /* @__PURE__ */ jsxRuntime.jsx(
                  "button",
                  {
                    onClick: () => setOpen(false),
                    className: "v0-p-1 v0-transition-colors v0-rounded v0-text-neutral-300 v0-hover:v0-text-neutral-600 v0-hover:v0-bg-neutral-100",
                    children: /* @__PURE__ */ jsxRuntime.jsx(X, { className: "v0-size-4" })
                  }
                )
              ] }),
              /* @__PURE__ */ jsxRuntime.jsx("div", { className: "v0-flex v0-flex-col v0-flex-1 v0-min-h-0", children: /* @__PURE__ */ jsxRuntime.jsxs(
                react$1.motion.div,
                {
                  exit: { y: 8, opacity: 0 },
                  transition: { type: "spring", duration: 0.25, bounce: 0 },
                  className: "v0-flex v0-flex-col v0-flex-1 v0-min-h-0 v0-rounded-b-lg",
                  children: [
                    /* @__PURE__ */ jsxRuntime.jsxs("div", { className: "v0-flex v0-items-center v0-justify-between v0-flex-shrink-0 v0-gap-4 v0-px-3 v0-py-1.5 v0-border-b v0-bg-neutral-100 v0-border-neutral-200", children: [
                      /* @__PURE__ */ jsxRuntime.jsx("p", { className: "v0-text-xs v0-text-balance v0-text-neutral-600", children: description }),
                      /* @__PURE__ */ jsxRuntime.jsx("div", { className: "v0-flex v0-items-center v0-justify-center v0-shrink-0", children: /* @__PURE__ */ jsxRuntime.jsxs("div", { className: "v0-relative v0-size-10", children: [
                        /* @__PURE__ */ jsxRuntime.jsxs("svg", { className: "v0-transform v0--rotate-90 v0-size-10", viewBox: "0 0 32 32", children: [
                          /* @__PURE__ */ jsxRuntime.jsx(
                            "circle",
                            {
                              cx: "16",
                              cy: "16",
                              r: "12",
                              stroke: "currentColor",
                              strokeWidth: "2",
                              fill: "transparent",
                              className: "v0-text-neutral-300"
                            }
                          ),
                          /* @__PURE__ */ jsxRuntime.jsx(
                            "circle",
                            {
                              cx: "16",
                              cy: "16",
                              r: "12",
                              stroke: "currentColor",
                              strokeWidth: "2",
                              fill: "transparent",
                              strokeDasharray: `${2 * Math.PI * 12}`,
                              strokeDashoffset: `${2 * Math.PI * 12 * (1 - validCount / envs.length)}`,
                              className: validCount === envs.length ? "v0-text-green-500" : "v0-text-amber-500",
                              style: {
                                transition: "stroke-dashoffset 0.3s ease-in-out"
                              }
                            }
                          )
                        ] }),
                        /* @__PURE__ */ jsxRuntime.jsx("div", { className: "v0-absolute v0-inset-0 v0-flex v0-items-center v0-justify-center", children: /* @__PURE__ */ jsxRuntime.jsxs("span", { className: "v0-text-[10px] v0-font-semibold v0-text-neutral-700 v0-leading-none v0-tabular-nums", children: [
                          validCount,
                          "/",
                          envs.length
                        ] }) })
                      ] }) })
                    ] }),
                    /* @__PURE__ */ jsxRuntime.jsx("div", { className: "v0-flex-1 v0-overflow-y-auto v0-bg-white", children: /* @__PURE__ */ jsxRuntime.jsx("div", { className: "v0-p-4 v0-pb-6 v0-space-y-3", children: envs.map((env) => /* @__PURE__ */ jsxRuntime.jsxs(
                      "div",
                      {
                        className: " v0-p-3 v0-border v0-rounded-lg v0-bg-neutral-50 v0-border-neutral-200",
                        children: [
                          /* @__PURE__ */ jsxRuntime.jsxs("div", { className: "v0-flex v0-items-center v0-gap-3", children: [
                            /* @__PURE__ */ jsxRuntime.jsx(
                              "div",
                              {
                                className: `v0-flex-shrink-0 v0-size-8 v0-rounded-sm v0-flex v0-items-center v0-justify-center ${env.isValid ? "v0-bg-green-100 v0-text-green-600" : "v0-bg-amber-100 v0-text-amber-600"}`,
                                children: env.isValid ? /* @__PURE__ */ jsxRuntime.jsx(Check, { className: "v0-size-4" }) : /* @__PURE__ */ jsxRuntime.jsx(AlertTriangle, { className: "v0-size-4" })
                              }
                            ),
                            /* @__PURE__ */ jsxRuntime.jsxs("div", { className: "v0-flex-1 v0-min-w-0", children: [
                              /* @__PURE__ */ jsxRuntime.jsx("div", { className: "v0-text-sm v0-font-medium v0-text-neutral-900", children: env.label }),
                              /* @__PURE__ */ jsxRuntime.jsx("div", { className: "v0-font-mono v0-text-xs v0-truncate v0-text-neutral-500", children: env.name })
                            ] }),
                            /* @__PURE__ */ jsxRuntime.jsx(
                              "div",
                              {
                                className: `v0-text-xs v0-font-medium ${env.isValid ? "v0-text-green-600" : "v0-text-amber-600"}`,
                                children: env.isValid ? "Set" : "Missing"
                              }
                            )
                          ] }),
                          env.script?.content && !env.isValid && /* @__PURE__ */ jsxRuntime.jsxs("div", { className: "v0-relative v0-mt-4", children: [
                            /* @__PURE__ */ jsxRuntime.jsx(
                              "button",
                              {
                                onClick: () => handleCopyScript(env.script.content, env.name),
                                className: "v0-absolute v0-top-2 v0-right-2 v0-z-10 v0-p-2 v0-rounded v0-bg-neutral-800 v0-hover:v0-bg-neutral-700 v0-transition-colors v0-text-neutral-300 v0-hover:v0-text-white",
                                title: "Copy code",
                                children: copiedScript === env.name ? /* @__PURE__ */ jsxRuntime.jsx(Check, { className: "v0-size-4" }) : /* @__PURE__ */ jsxRuntime.jsx(Copy, { className: "v0-size-4" })
                              }
                            ),
                            /* @__PURE__ */ jsxRuntime.jsx(
                              reactSyntaxHighlighter.Prism,
                              {
                                language: env.script.language.toLowerCase(),
                                style: prism.oneDark,
                                customStyle: {
                                  margin: 0,
                                  padding: "12px",
                                  fontSize: "11px",
                                  scrollbarWidth: "none"
                                },
                                children: normalizeIndentation(env.script.content)
                              }
                            )
                          ] }),
                          addon[env.name] != void 0 ? addon[env.name] : null
                        ]
                      },
                      env.name
                    )) }) })
                  ]
                },
                "content"
              ) })
            ]
          }
        ) : /* @__PURE__ */ jsxRuntime.jsxs(
          react$1.motion.button,
          {
            layoutId: "wrapper",
            onClick: () => {
              setOpen(true);
            },
            className: "v0-relative v0-flex v0-items-center v0-gap-2 v0-px-3 v0-font-medium v0-transition-colors v0-border v0-rounded-lg v0-shadow-sm v0-outline-none v0-pointer-events-auto v0-h-9 v0-border-amber-200 v0-bg-amber-50 v0-hover:v0-bg-amber-100",
            style: { borderRadius: 8 },
            children: [
              /* @__PURE__ */ jsxRuntime.jsx(react$1.motion.div, { layoutId: "icon", children: /* @__PURE__ */ jsxRuntime.jsx(AlertTriangle, { className: "v0-w-4 v0-h-4 v0-text-amber-600" }) }),
              /* @__PURE__ */ jsxRuntime.jsx(react$1.motion.span, { layoutId: "title", className: "v0-block v0-text-sm v0-text-amber-800", children: title })
            ]
          },
          "button"
        ) })
      ]
    }
  );
};
var MOUNT_INSTANCE_KEY = "__V0_SETUP_TOOLBAR_MOUNTED__";
var SetupToolbar = (props) => {
  const shadowHostRef = react.useRef(null);
  const shadowRootRef = react.useRef(null);
  const portalContainerRef = react.useRef(null);
  const mountInstanceIdRef = react.useRef(null);
  const [portalContainer, setPortalContainer] = react.useState(null);
  react.useEffect(() => {
    const w = window;
    const instanceId = Math.random().toString(36).substr(2, 9);
    const existingInstanceId = w[MOUNT_INSTANCE_KEY];
    if (existingInstanceId && existingInstanceId !== mountInstanceIdRef.current) {
      return;
    }
    mountInstanceIdRef.current = instanceId;
    w[MOUNT_INSTANCE_KEY] = instanceId;
    const shadowHost = document.createElement("div");
    shadowHost.style.cssText = "position: fixed; top: 0; left: 0; width: 100%; height: 100%; pointer-events: none; z-index: 9999;";
    shadowHostRef.current = shadowHost;
    const shadowRoot = shadowHost.attachShadow({ mode: "open" });
    shadowRootRef.current = shadowRoot;
    const styleElement = document.createElement("style");
    styleElement.textContent = CSS_CONTENT;
    shadowRoot.appendChild(styleElement);
    const portalContainerElement = document.createElement("div");
    portalContainerElement.style.cssText = "width: 100%; height: 100%;";
    portalContainerRef.current = portalContainerElement;
    shadowRoot.appendChild(portalContainerElement);
    setPortalContainer(portalContainerElement);
    document.body.appendChild(shadowHost);
    return () => {
      if (w[MOUNT_INSTANCE_KEY] === instanceId) {
        w[MOUNT_INSTANCE_KEY] = null;
        if (shadowHostRef.current && shadowHostRef.current.parentNode) {
          shadowHostRef.current.parentNode.removeChild(shadowHostRef.current);
        }
        shadowHostRef.current = null;
        shadowRootRef.current = null;
        portalContainerRef.current = null;
        setPortalContainer(null);
      }
      mountInstanceIdRef.current = null;
    };
  }, []);
  return portalContainer ? reactDom.createPortal(/* @__PURE__ */ jsxRuntime.jsx(SetupToolbarInternal, { ...props }), portalContainer) : null;
};

// packages/core/index.ts
var VERSION = version;

exports.CSS_CONTENT = CSS_CONTENT;
exports.SetupToolbar = SetupToolbar;
exports.VERSION = VERSION;
exports.cn = cn;
exports.injectStyles = injectStyles;
//# sourceMappingURL=index.js.map
//# sourceMappingURL=index.js.map