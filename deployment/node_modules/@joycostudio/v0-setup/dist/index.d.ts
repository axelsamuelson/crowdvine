import * as react from 'react';
import { ClassValue } from 'clsx';

type Variable = {
    name: string;
    label: string;
    script?: {
        language: string;
        content: string;
    };
};
type VariableGroup = Variable[];
interface EnvCheckResult extends Variable {
    isValid: boolean;
}
interface EnvCheckActionResult {
    envs: EnvCheckResult[];
}
type EnvCheckAction = () => Promise<EnvCheckActionResult>;

type SetupToolbarBaseProps = {
    title: string;
    description: string;
    addon?: Record<string, React.ReactNode>;
};
type SetupToolbarProps = (SetupToolbarBaseProps & {
    envs: VariableGroup;
}) | (SetupToolbarBaseProps & {
    envCheckAction: EnvCheckAction;
});
declare const SetupToolbar: (props: SetupToolbarProps) => react.ReactPortal | null;

declare function cn(...inputs: ClassValue[]): string;

declare const CSS_CONTENT = "/* CSS_PLACEHOLDER */";
declare function injectStyles(): void;

declare const VERSION: string;

export { CSS_CONTENT, type EnvCheckAction, type EnvCheckActionResult, type EnvCheckResult, SetupToolbar, VERSION, cn, injectStyles };
